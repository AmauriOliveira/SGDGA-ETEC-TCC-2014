/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.etec.sgdga.tela;

import br.com.etec.sgdga.control.BasicCidade;
import br.com.etec.sgdga.control.BasicFornecedor;
import br.com.etec.sgdga.control.CnpjValido;
import br.com.etec.sgdga.control.ControleCidade;
import br.com.etec.sgdga.control.ControleFornecedor;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Windows
 */
public class TelaFornecedor extends javax.swing.JFrame {

    DefaultTableModel tmFornecedores = new DefaultTableModel(null, new String[]{"Nome", "Cnpj", "Site", "Telefone"}) {
        @Override
        public boolean isCellEditable(int rowIndex, int mColIndex) {
            return false;
        }
    };
    ListSelectionModel lsmFornecedor;
    List<BasicFornecedor> fornecedores;
    List<BasicCidade> cidades;
    String tipoCadastro = null;

    public TelaFornecedor() {
        initComponents();
        atualizarFornecedor();

        cidades = new ControleCidade().listarCidades("%%");

        cbCidade.removeAllItems();

        for (int i = 0; i < cidades.size(); i++) {
            cbCidade.addItem(cidades.get(i).getNome());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtDiscri = new javax.swing.JTextField();
        txtCnpj = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbCidade = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCep = new javax.swing.JFormattedTextField();
        try{
            javax.swing.text.MaskFormatter cep= new javax.swing.text.MaskFormatter("#####-###");
            txtCep = new javax.swing.JFormattedTextField(cep);
        }
        catch (Exception e){
        }
        jLabel8 = new javax.swing.JLabel();
        txtSite = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter fixo= new javax.swing.text.MaskFormatter("(##)####-####");
            txtTelefone = new javax.swing.JFormattedTextField(fixo);
        }
        catch (Exception e){
        }
        jPanel2 = new javax.swing.JPanel();
        btnDeletar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnNovo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbFornecedor = new javax.swing.JTable();
        txtProcurar = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Fornecedores");
        setMinimumSize(new java.awt.Dimension(830, 525));

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Nome:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Discrição:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(jLabel2, gridBagConstraints);

        txtNome.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 289;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(txtNome, gridBagConstraints);

        txtDiscri.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 384;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(txtDiscri, gridBagConstraints);

        txtCnpj.setEditable(false);
        try{
            javax.swing.text.MaskFormatter cep= new javax.swing.text.MaskFormatter("##.###.###/####-##");
            txtCnpj = new javax.swing.JFormattedTextField(cep);
        }
        catch (Exception e){
        }
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 140;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(txtCnpj, gridBagConstraints);

        jLabel4.setText("Endereço:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(jLabel4, gridBagConstraints);

        txtEndereco.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 290;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(txtEndereco, gridBagConstraints);

        jLabel5.setText("Cidade:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(jLabel5, gridBagConstraints);

        cbCidade.setEditable(true);
        cbCidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCidade.setEnabled(false);
        cbCidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbCidadeMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cbCidadeMouseReleased(evt);
            }
        });
        cbCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCidadeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 70;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(cbCidade, gridBagConstraints);

        jLabel6.setText("E-mail:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(jLabel6, gridBagConstraints);

        txtEmail.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 133;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(txtEmail, gridBagConstraints);

        jLabel7.setText("CEP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(jLabel7, gridBagConstraints);

        txtCep.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(txtCep, gridBagConstraints);

        jLabel8.setText("Site:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(jLabel8, gridBagConstraints);

        txtSite.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 120;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(txtSite, gridBagConstraints);

        jLabel9.setText("CNPJ:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 9, 9);
        jPanel1.add(jLabel9, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 0));
        jLabel3.setText("Cadastro de Fornecedores");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 8;
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel10.setText("Telefone:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(jLabel10, gridBagConstraints);

        txtTelefone.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 75;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel1.add(txtTelefone, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnDeletar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/lorry_delete.png"))); // NOI18N
        btnDeletar.setText("Deletar");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(btnDeletar, gridBagConstraints);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(btnCancelar, gridBagConstraints);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/disk.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(btnSalvar, gridBagConstraints);

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/pencil.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(btnAlterar, gridBagConstraints);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/lorry_add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(btnNovo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        jPanel1.add(jPanel2, gridBagConstraints);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/update.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        jPanel1.add(jButton1, gridBagConstraints);

        jScrollPane1.setBorder(new javax.swing.border.MatteBorder(null));

        tbFornecedor.setModel(tmFornecedores);
        tbFornecedor.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmFornecedor = tbFornecedor.getSelectionModel();
        lsmFornecedor.addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent e){
                tbFornecedorLinhaSelecionada(tbFornecedor);
            }
        });
        jScrollPane1.setViewportView(tbFornecedor);

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/magnifier.png"))); // NOI18N
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        jLabel11.setText("Pesquisar por nome:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtProcurar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisar)
                        .addGap(5, 5, 5))
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnPesquisar)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings({"empty-statement", "empty-statement"})
    protected void tbFornecedorLinhaSelecionada(JTable tb) {
        if (tb.getSelectedRow() != -1) {
            txtNome.setText(fornecedores.get(tb.getSelectedRow()).getNome());
            txtCnpj.setText(fornecedores.get(tb.getSelectedRow()).getCnpj());
            txtDiscri.setText(fornecedores.get(tb.getSelectedRow()).getDisc());
            txtEndereco.setText(fornecedores.get(tb.getSelectedRow()).getEndereco());
            txtCep.setText(fornecedores.get(tb.getSelectedRow()).getCep());
            selecionaCidade(fornecedores.get(tb.getSelectedRow()).getCidade());;
            txtSite.setText(fornecedores.get(tb.getSelectedRow()).getSite());
            txtEmail.setText(fornecedores.get(tb.getSelectedRow()).getEmail());
            txtTelefone.setText(fornecedores.get(tb.getSelectedRow()).getTelefone());

        } else {
            limpaCampos();
        }
    }

    private void selecionaCidade(int idCidade) {

        for (int i = 0; i < cidades.size(); i++) {
            if (cidades.get(i).getId() == idCidade) {
                cbCidade.setSelectedIndex(i);
                return;
            }

        }

    }

    protected void listarFornecedor() {
        ControleFornecedor che = new ControleFornecedor();
        fornecedores = che.listarFornecedores("%" + txtProcurar.getText().trim() + "%");
        mostrarFornecedor(fornecedores);
    }

    protected void mostrarFornecedor(List<BasicFornecedor> fornec) {

        while (tmFornecedores.getRowCount() > 0) {
            tmFornecedores.removeRow(0);
        }

        if (fornec.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum Registro Encontrado", "Erro", 0);
        } else {

            String[] campos = new String[]{null, null, null, null};
            for (int i = 0; i < fornec.size(); i++) {
                tmFornecedores.addRow(campos);

                tmFornecedores.setValueAt(fornec.get(i).getNome(), i, 0);
                tmFornecedores.setValueAt(fornec.get(i).getCnpj(), i, 1);
                tmFornecedores.setValueAt(fornec.get(i).getSite(), i, 2);
                tmFornecedores.setValueAt(fornec.get(i).getTelefone(), i, 3);

            }
        }

    }

    protected boolean verificarCampos() {

        int a = txtNome.getText().trim().length();
        int b = txtCnpj.getText().trim().length();
        int c = txtDiscri.getText().trim().length();
        int d = txtEndereco.getText().trim().length();
        int e = txtCep.getText().trim().length();
        int f = cbCidade.getSelectedIndex();
        int g = txtSite.getText().trim().length();
        int h = txtEmail.getText().trim().length();
        int i = txtTelefone.getText().trim().length();
        CnpjValido cnpj = new CnpjValido();

        ///*
        if (b == 18) {
            if (cnpj.CNPJ(txtCnpj.getText().trim())) {
                if (a > 0 && a < 26) {
                    if (b < 19) {
                        if (c > 0 && c < 51) {
                            if (d > 0 && d < 61) {
                                if (e < 10) {
                                    if (f > -1) {
                                        if (g > 0 && g < 31) {
                                            if (h > 0 && h < 26) {
                                                if (i > 0 && i < 14) {
                                                    return true;
                                                } else {
                                                    JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter 13 caracteres", "Aviso", 0);
                                                    txtTelefone.requestFocus();
                                                    return false;
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 1 a 25 caracteres", "Aviso", 0);
                                                txtEmail.requestFocus();
                                                return false;
                                            }
                                        } else {
                                            JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 1 a 30 caracteres", "Aviso", 0);
                                            txtSite.requestFocus();
                                            return false;
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEscolha um item", "Aviso", 0);
                                        cbCidade.requestFocus();
                                        return false;
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter 9 caracteres", "Aviso", 0);
                                    txtCep.requestFocus();
                                    return false;
                                }
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 1 a 60 caracteres", "Aviso", 0);
                                txtEndereco.requestFocus();
                                return false;
                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 1 a 50 caracteres", "Aviso", 0);
                            txtDiscri.requestFocus();
                            return false;
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 18 caracteres", "Aviso", 0);
                        txtCnpj.requestFocus();
                        return false;
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 1 a 25 caracteres", "Aviso", 0);
                    txtNome.requestFocus();
                    return false;
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Cnpj Invalido", "Errado", 2, null);
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Valor errado", "Falha", 0, null);
            txtCnpj.requestFocus();
            return false;
        }
    }

    protected void cadastraFornecedor() {

        if (verificarCampos()) {
            BasicFornecedor fornecedor = new BasicFornecedor();

            fornecedor.setNome(txtNome.getText().trim());
            fornecedor.setCnpj(txtCnpj.getText().trim());
            fornecedor.setDisc(txtDiscri.getText().trim());
            fornecedor.setEndereco(txtEndereco.getText().trim());
            fornecedor.setCep(txtCep.getText().trim());
            fornecedor.setCidade(cidades.get(cbCidade.getSelectedIndex()).getId());
            fornecedor.setSite(txtSite.getText().trim());
            fornecedor.setEmail(txtEmail.getText().trim());
            fornecedor.setTelefone(txtTelefone.getText().trim());

            ControleFornecedor forn = new ControleFornecedor();
            forn.cadastrarFornecedores(fornecedor);
            JOptionPane.showMessageDialog(this, "Registro feito com sucesso\n" + fornecedor.getNome(), "Registro", 1);
            desabilitarCampos();
        }

    }

    protected void habilitarCampos() {

        txtNome.setEditable(true);
        txtCnpj.setEditable(true);
        txtDiscri.setEditable(true);
        txtEndereco.setEditable(true);
        txtCep.setEditable(true);
        cbCidade.setEnabled(true);
        txtSite.setEditable(true);
        txtEmail.setEditable(true);
        txtTelefone.setEditable(true);
        btnSalvar.setEnabled(true);
        btnAlterar.setEnabled(false);
        btnNovo.setEnabled(false);
        btnDeletar.setEnabled(false);
        tbFornecedor.setEnabled(false);
        btnPesquisar.setEnabled(false);
        txtProcurar.setEnabled(false);
        btnCancelar.setEnabled(true);
    }

    protected void desabilitarCampos() {
        txtNome.setEditable(false);//
        txtCnpj.setEditable(false);//
        txtDiscri.setEditable(false);//
        txtEndereco.setEditable(false);//
        txtCep.setEditable(false);//
        cbCidade.setEnabled(false);//
        txtSite.setEditable(false);//
        txtEmail.setEditable(false);//
        txtTelefone.setEditable(false);//
        btnSalvar.setEnabled(false);//
        btnAlterar.setEnabled(true);
        btnNovo.setEnabled(true);
        btnDeletar.setEnabled(true);
        tbFornecedor.setEnabled(true);
        btnPesquisar.setEnabled(true);
        txtProcurar.setEnabled(true);
        btnCancelar.setEnabled(false);//
        txtProcurar.setEnabled(true);
    }

    private void limpaCampos() {

        txtNome.setText("");
        txtCnpj.setText("");
        txtDiscri.setText("");
        txtEndereco.setText("");
        txtCep.setText("");
        cbCidade.setSelectedIndex(-1);
        txtSite.setText("");
        txtEmail.setText("");
        txtTelefone.setText("");
    }

    protected void alteraFornecedor() {
        if (tbFornecedor.getSelectedRow() != -1) {
            habilitarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum Registro Selecionado na Tabela", "Erro", 0);
        }
    }

    protected void alterarFornecedor() {
        if (verificarCampos()) {
            BasicFornecedor fornecedor = new BasicFornecedor();
            fornecedor.setId(fornecedores.get(tbFornecedor.getSelectedRow()).getId());

            fornecedor.setNome(txtNome.getText().trim());
            fornecedor.setCnpj(txtCnpj.getText().trim());
            fornecedor.setDisc(txtDiscri.getText().trim());
            fornecedor.setEndereco(txtEndereco.getText().trim());
            fornecedor.setCep(txtCep.getText().trim());
            fornecedor.setCidade(cidades.get(cbCidade.getSelectedIndex()).getId());
            fornecedor.setSite(txtSite.getText().trim());
            fornecedor.setEmail(txtEmail.getText().trim());
            fornecedor.setTelefone(txtTelefone.getText().trim());

            ControleFornecedor c = new ControleFornecedor();
            c.alterarFornecedores(fornecedor);
            JOptionPane.showMessageDialog(this, "Registro alterado com sucesso\n" + fornecedor.getNome(), "Registro", 1);
            desabilitarCampos();
        }
    }

    private void novoFornecedor() {
        habilitarCampos();
        limpaCampos();
    }
//

    protected void atualizarFornecedor() {
        ControleFornecedor forn = new ControleFornecedor();
        fornecedores = forn.listarFornecedores("%%");
        ExibeFornecedores(fornecedores);
    }

    protected void ExibeFornecedores(List<BasicFornecedor> fornec) {

        while (tmFornecedores.getRowCount() > 0) {
            tmFornecedores.removeRow(0);
        }

        if (!fornec.isEmpty()) {

            String[] campos = new String[]{null, null, null, null};
            for (int i = 0; i < fornec.size(); i++) {
                tmFornecedores.addRow(campos);
//{"Nome", "Cnpj", "Site", "Telefone"}
                tmFornecedores.setValueAt(fornec.get(i).getNome(), i, 0);
                tmFornecedores.setValueAt(fornec.get(i).getCnpj(), i, 1);
                tmFornecedores.setValueAt(fornec.get(i).getSite(), i, 2);
                tmFornecedores.setValueAt(fornec.get(i).getTelefone(), i, 3);

            }
        }

    }

    //
    protected void excluirFornecedor() {
        if (tbFornecedor.getSelectedRow() != -1) {
            int res = JOptionPane.showConfirmDialog(this, "Deseja apagar este registro?", "Confirmação", JOptionPane.YES_NO_OPTION, 2);
            if (res == JOptionPane.YES_OPTION) {
                ControleFornecedor forn = new ControleFornecedor();
                forn.excluirFornecedores(fornecedores.get(tbFornecedor.getSelectedRow()).getId());
                JOptionPane.showMessageDialog(this, "Registro apagado com sucesso", "Registro", 0);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum Registro Selecionado na Tabela", "Erro", 0);
        }
    }
    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        novoFornecedor();
        tipoCadastro = "novo";
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        tipoCadastro = "alteracao";
        alteraFornecedor();
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        switch (tipoCadastro) {
            case "novo":
                cadastraFornecedor();
                break;
            case "alteracao":
                alterarFornecedor();
                break;
        }
        atualizarFornecedor();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        excluirFornecedor();
        atualizarFornecedor();
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        listarFornecedor();
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpaCampos();
        desabilitarCampos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void cbCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCidadeActionPerformed
    }//GEN-LAST:event_cbCidadeActionPerformed

    private void cbCidadeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbCidadeMouseReleased


    }//GEN-LAST:event_cbCidadeMouseReleased

    private void cbCidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbCidadeMouseClicked
        int c = cbCidade.getItemCount();
        if (c == 0) {
            TelaCidade cidade = new TelaCidade();
            cidade.setVisible(true);
            cidade.setState(JFrame.NORMAL);
        }
    }//GEN-LAST:event_cbCidadeMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cidades = new ControleCidade().listarCidades("%%");

        cbCidade.removeAllItems();

        for (int i = 0; i < cidades.size(); i++) {
            cbCidade.addItem(cidades.get(i).getNome());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFornecedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaFornecedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cbCidade;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbFornecedor;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtCnpj;
    private javax.swing.JTextField txtDiscri;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtProcurar;
    private javax.swing.JTextField txtSite;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
