/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.etec.sgdga.tela;

import br.com.etec.sgdga.control.BasicCidade;
import br.com.etec.sgdga.control.BasicCliente;
import br.com.etec.sgdga.control.BasicClienteGrupo;
import br.com.etec.sgdga.control.CnpjValido;
import br.com.etec.sgdga.control.ControleCidade;
import br.com.etec.sgdga.control.ControleCliente;
import br.com.etec.sgdga.control.ControleClienteGrupo;
import br.com.etec.sgdga.control.CpfValido;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aluno
 */
public class TelaCliente extends javax.swing.JFrame {

    DefaultTableModel tmClientes = new DefaultTableModel(null, new String[]{"Nome", "Sobrenome", "Cpf", "Celular", "Telefone"}) {
        @Override
        public boolean isCellEditable(int rowIndex, int mColIndex) {
            return false;
        }
    };
    ListSelectionModel lsmCliente;
    List<BasicCliente> clientes;
    List<BasicCidade> cidades;
    List<BasicClienteGrupo> grupos;
    String tipoCadastro;
    private ImageIcon imagem;

    public TelaCliente() {
        initComponents();
        atualizarCliente();
        cidades = new ControleCidade().listarCidades("%%");
        grupos = new ControleClienteGrupo().listarGrupos("%%");
        jcGrupo.removeAllItems();
        jcCidade.removeAllItems();

        for (int i = 0; i < cidades.size(); i++) {
            jcCidade.addItem(cidades.get(i).getNome());
        }

        for (int i = 0; i < grupos.size(); i++) {
            jcGrupo.addItem(grupos.get(i).getNome());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPesquisa = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCliente = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSobrenome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCpf = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtRua = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jcCidade = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        txtCep = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter cep= new javax.swing.text.MaskFormatter("#####-###");
            txtCep = new javax.swing.JFormattedTextField(cep);
        }
        catch (Exception e){
        }
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter fixo= new javax.swing.text.MaskFormatter("(##)####-####");
            txtTelefone = new javax.swing.JFormattedTextField(fixo);
        }
        catch (Exception e){
        }
        //# 	Any valid number, uses Character.isDigit.
        //' 	Escape character, used to escape any of the special formatting characters.
        //U	Any character (Character.isLetter). All lowercase letters are mapped to upper case.
        //L	Any character (Character.isLetter). All upper case letters are mapped to lower case.
        //A	Any character or number (Character.isLetter or Character.isDigit)
        //?	Any character (Character.isLetter).
        //*	Anything.
        //H	Any hex character (0-9, a-f or A-F).
        jLabel12 = new javax.swing.JLabel();
        btnNovo = new javax.swing.JButton();
        jcGrupo = new javax.swing.JComboBox();
        btnAlterar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        txtCelular = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter celular= new javax.swing.text.MaskFormatter("(##)#####-####");
            txtCelular = new javax.swing.JFormattedTextField(celular);
        }
        catch (Exception e){
        }
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Clientes");
        setBackground(new java.awt.Color(153, 0, 153));

        jLabel1.setText("Pesquisa de Clientes:");

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/magnifier.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        tbCliente.setModel(tmClientes);
        tbCliente.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmCliente = tbCliente.getSelectionModel();
        lsmCliente.addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent e){
                tbClienteLinhaSelecionada(tbCliente);
            }
        });
        jScrollPane1.setViewportView(tbCliente);

        jLabel2.setText("Nome:");

        txtNome.setEditable(false);

        jLabel3.setText("Sobrenome:");

        txtSobrenome.setEditable(false);

        jLabel4.setText("CPF/CNPJ:");

        txtCpf.setEditable(false);
        txtCpf.setToolTipText("");

        jLabel5.setText("Rua:");

        txtRua.setEditable(false);

        jLabel6.setText("NÂ°:");

        txtNumero.setEditable(false);

        jLabel7.setText("Bairro:");

        txtBairro.setEditable(false);

        jLabel8.setText("Cidade:");

        jcCidade.setEditable(true);
        jcCidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcCidade.setEnabled(false);

        jLabel9.setText("CEP:");

        txtCep.setEditable(false);

        jLabel10.setText("Grupo:");

        jLabel11.setText("Telefone:");

        txtTelefone.setEditable(false);

        jLabel12.setText("Celular:");

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/vcard_add.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        jcGrupo.setEditable(true);
        jcGrupo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcGrupo.setEnabled(false);
        jcGrupo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcGrupoMouseClicked(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/vcard_edit.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/disk.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setEnabled(false);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setEnabled(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/vcard_add.png"))); // NOI18N
        btnApagar.setText("Excluir");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });

        txtCelular.setEditable(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/etec/sgdga/res/img/32/google_map.png"))); // NOI18N
        jButton1.setText("Ver Mapa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisa)
                        .addGap(4, 4, 4)
                        .addComponent(btnPesquisar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRua))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNome)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSobrenome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumero)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBairro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCep)
                                .addGap(20, 20, 20))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(165, 583, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(53, 53, 53)
                                .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCelular, txtTelefone});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAlterar, btnApagar, btnCancelar, btnNovo, btnSalvar, jButton1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jcGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jcCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCelular, txtTelefone});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAlterar, btnApagar, btnCancelar, btnNovo, btnSalvar, jButton1});

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    @SuppressWarnings("empty-statement")
    protected void tbClienteLinhaSelecionada(JTable tb) {
        if (tb.getSelectedRow() != -1) {
            txtNome.setText(clientes.get(tb.getSelectedRow()).getNome());
            txtSobrenome.setText(clientes.get(tb.getSelectedRow()).getSobrenome());
            txtCpf.setText(clientes.get(tb.getSelectedRow()).getCpf());
            selecionaGrupo(clientes.get(tb.getSelectedRow()).getGrupo());;
            txtRua.setText(clientes.get(tb.getSelectedRow()).getRua());
            txtNumero.setText(clientes.get(tb.getSelectedRow()).getNumero());
            txtBairro.setText(clientes.get(tb.getSelectedRow()).getBairro());
            selecionaCidade(clientes.get(tb.getSelectedRow()).getCidade());
            txtCep.setText(clientes.get(tb.getSelectedRow()).getCep());
            txtTelefone.setText(clientes.get(tb.getSelectedRow()).getFixo());
            txtCelular.setText(clientes.get(tb.getSelectedRow()).getCelular());

        } else {
            limpaCampos();
        }
    }

    private void selecionaGrupo(int idGrupo) {

        for (int i = 0; i < grupos.size(); i++) {
            if (grupos.get(i).getId() == idGrupo) {
                jcGrupo.setSelectedIndex(i);
                return;
            }

        }

    }

    private void selecionaCidade(int idCidade) {

        for (int i = 0; i < cidades.size(); i++) {
            if (cidades.get(i).getId() == idCidade) {
                jcCidade.setSelectedIndex(i);
                return;
            }

        }

    }

    protected void listarCliente() {
        ControleCliente clie = new ControleCliente();
        clientes = clie.listarClientes("%" + txtPesquisa.getText().trim() + "%");
        mostrarCliente(clientes);
    }

    protected void mostrarCliente(List<BasicCliente> clientes) {

        while (tmClientes.getRowCount() > 0) {
            tmClientes.removeRow(0);
        }

        if (clientes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum Registro Encontrado", "Erro", 0);
        } else {

            String[] campos = new String[]{null, null, null, null, null};
            for (int i = 0; i < clientes.size(); i++) {
                tmClientes.addRow(campos);
                tmClientes.setValueAt(clientes.get(i).getNome(), i, 0);
                tmClientes.setValueAt(clientes.get(i).getSobrenome(), i, 1);
                tmClientes.setValueAt(clientes.get(i).getCpf(), i, 2);
                tmClientes.setValueAt(clientes.get(i).getCelular(), i, 3);
                tmClientes.setValueAt(clientes.get(i).getFixo(), i, 4);

            }
        }

    }

    protected boolean verificarCampos() {
        int a = txtNome.getText().length();
        int b = txtSobrenome.getText().length();
        int c = txtCpf.getText().length();
        int d = jcGrupo.getSelectedIndex();//
        int e = txtRua.getText().length();
        int f = txtNumero.getText().length();
        int g = txtBairro.getText().length();
        int h = jcCidade.getSelectedIndex();//
        int i = txtCep.getText().length();
        int j = txtTelefone.getText().length();
        int k = txtCelular.getText().length();

        CnpjValido cnpj = new CnpjValido();
        CpfValido cpf = new CpfValido();

        if (a > 0 && a < 21) {
            if (b > 0 && b < 21) {
                if (c > 0 && c < 19) {
                    if (cnpj.CNPJ(txtCpf.getText().trim()) || cpf.CPF(txtCpf.getText().trim())) {
                        if (d > -1) {
                            if (e > 0 && e < 31) {
                                if (f > 0 && f < 7) {
                                    if (g > 0 && g < 26) {
                                        if (h > -1) {
                                            if (i > 0 && i < 10) {
                                                if (j > 0 && j < 14) {
                                                    if (k > 0 && k < 15) {
                                                        return true;
                                                    } else {

                                                        JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter 14 caracteres", "Aviso", 0);
                                                        txtCelular.requestFocus();
                                                        return false;
                                                    }
                                                } else {
                                                    System.out.println(txtTelefone.getText());
                                                    JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter 15 caracteres", "Aviso", 0);
                                                    txtTelefone.requestFocus();
                                                    return false;
                                                }
                                            } else {
                                                JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 9 caracteres", "Aviso", 0);
                                                txtCep.requestFocus();
                                                return false;
                                            }
                                        } else {
                                            JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nSelecione um item da lista", "Aviso", 0);
                                            jcCidade.requestFocus();
                                            return false;
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 1 a 25 caracteres", "Aviso", 0);
                                        txtBairro.requestFocus();
                                        return false;
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 1 a 6 caracteres", "Aviso", 0);
                                    txtNumero.requestFocus();
                                    return false;
                                }
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 1 a 30 caracteres", "Aviso", 0);
                                txtRua.requestFocus();
                                return false;
                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nSelecione um item da lista", "Aviso", 0);
                            jcGrupo.requestFocus();
                            return false;
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Preencher um cnpj ou cpf Valido", "Aviso", 0);
                        txtCpf.requestFocus();
                        return false;
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 1 a 18 caracteres", "Aviso", 0);
                    txtCpf.requestFocus();
                    return false;
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 1 a 20 caracteres", "Aviso", 0);
                txtSobrenome.requestFocus();
                return false;
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Preenchimento incorreto\nEste campo deve conter de 1 a 20 caracteres", "Aviso", 0);
            txtNome.requestFocus();
            return false;
        }
    }

    protected void cadastraCliente() {

        if (verificarCampos()) {
            BasicCliente cliente = new BasicCliente();
            cliente.setNome(txtNome.getText().trim());
            cliente.setSobrenome(txtSobrenome.getText().trim());
            cliente.setCpf(txtCpf.getText().trim());
            cliente.setGrupo(grupos.get(jcGrupo.getSelectedIndex()).getId());
            cliente.setRua(txtRua.getText().trim());
            cliente.setNumero(txtNumero.getText().trim());
            cliente.setBairro(txtBairro.getText().trim());
            cliente.setCidade(cidades.get(jcCidade.getSelectedIndex()).getId());
            cliente.setCep(txtCep.getText().trim());
            cliente.setFixo(txtTelefone.getText().trim());
            cliente.setCelular(txtCelular.getText().trim());

            ControleCliente ci = new ControleCliente();
            ci.cadastrarClientes(cliente);
            JOptionPane.showMessageDialog(this, "Registro feito com sucesso\n" + cliente.getNome(), "Registro", 1);
            desabilitarCampos();
        }

    }

    protected void habilitarCampos() {
        txtNome.setEditable(true);
        txtSobrenome.setEditable(true);
        txtCpf.setEditable(true);
        jcGrupo.setEnabled(true);
        txtRua.setEditable(true);
        txtNumero.setEditable(true);
        txtBairro.setEditable(true);
        jcCidade.setEnabled(true);
        txtCep.setEditable(true);
        txtTelefone.setEditable(true);
        txtCelular.setEditable(true);
        btnSalvar.setEnabled(true);
        btnAlterar.setEnabled(false);
        btnNovo.setEnabled(false);
        btnApagar.setEnabled(false);
        tbCliente.setEnabled(false);
        btnPesquisar.setEnabled(false);
        txtPesquisa.setEnabled(false);
        btnCancelar.setEnabled(true);
    }

    protected void desabilitarCampos() {
        txtNome.setEditable(false);
        txtSobrenome.setEditable(false);
        txtCpf.setEditable(false);
        jcGrupo.setEnabled(false);
        txtRua.setEditable(false);
        txtNumero.setEditable(false);
        txtBairro.setEditable(false);
        jcCidade.setEnabled(false);
        txtCep.setEditable(false);
        txtTelefone.setEditable(false);
        btnSalvar.setEnabled(false);
        btnAlterar.setEnabled(true);
        btnNovo.setEnabled(true);
        btnApagar.setEnabled(true);
        tbCliente.setEnabled(true);
        btnPesquisar.setEnabled(true);
        txtPesquisa.setEnabled(true);
        btnCancelar.setEnabled(false);
    }

    private void limpaCampos() {
        txtNome.setText("");
        txtSobrenome.setText("");
        txtCpf.setText("");
        jcGrupo.setSelectedIndex(-1);
        txtRua.setText("");
        txtNumero.setText("");
        txtBairro.setText("");
        jcCidade.setSelectedIndex(-1);
        txtCep.setText("");
        txtTelefone.setText("");
        txtCelular.setText("");
    }

    protected void alteraCliente() {
        if (tbCliente.getSelectedRow() != -1) {
            habilitarCampos();
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum Registro Selecionado na Tabela", "Erro", 0);
        }
    }

    protected void visualizarMapa() {
        String rua = txtRua.getText().trim();
        String numero = txtNumero.getText().trim();
        String bairro = txtBairro.getText().trim();
        String cidade = String.valueOf(jcCidade.getSelectedItem());

        rua = rua.replaceAll(" ", "+");
        numero = numero.replaceAll(" ", "+");
        bairro = bairro.replaceAll(" ", "+");
        cidade = cidade.replaceAll(" ", "+");

        String g = "http://maps.googleapis.com/maps/api/staticmap?center=" + rua + "," + numero + "," + bairro + "," + cidade + ",sp&zoom=19&size=600x300&maptype=hybrid&sensor=false&scale=3";

        Mapa m = new Mapa();
        m.setVisible(true);
        m.mostrarMapa(g);
    }

    protected void mapaCliente() {
        if (tbCliente.getSelectedRow() != -1) {
            visualizarMapa();
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum Registro Selecionado na Tabela", "Erro", 0);
        }
    }

    protected void alterarCliente() {
        if (verificarCampos()) {
            BasicCliente cliente = new BasicCliente();
            cliente.setId(clientes.get(tbCliente.getSelectedRow()).getId());
            cliente.setNome(txtNome.getText().trim());
            cliente.setSobrenome(txtSobrenome.getText().trim());
            cliente.setCpf(txtCpf.getText().trim());
            cliente.setGrupo(grupos.get(jcGrupo.getSelectedIndex()).getId());
            cliente.setRua(txtRua.getText().trim());
            cliente.setNumero(txtNumero.getText().trim());
            cliente.setBairro(txtBairro.getText().trim());
            cliente.setCidade(cidades.get(jcCidade.getSelectedIndex()).getId());
            cliente.setCep(txtCep.getText().trim());
            cliente.setFixo(txtTelefone.getText().trim());
            cliente.setCelular(txtCelular.getText().trim());

            ControleCliente c = new ControleCliente();
            c.alterarClientes(cliente);
            JOptionPane.showMessageDialog(this, "Registro alterado com sucesso\n" + cliente.getNome(), "Registro", 1);
            desabilitarCampos();
        }
    }

    private void novoCliente() {
        habilitarCampos();
        limpaCampos();
    }

//
    protected void atualizarCliente() {
        ControleCliente gru = new ControleCliente();
        clientes = gru.listarClientes("%%");
        ExibeCliente(clientes);
    }

    protected void ExibeCliente(List<BasicCliente> grup) {

        while (tmClientes.getRowCount() > 0) {
            tmClientes.removeRow(0);
        }

        if (!grup.isEmpty()) {

            String[] campos = new String[]{null, null, null, null, null};
            for (int i = 0; i < clientes.size(); i++) {
                tmClientes.addRow(campos);
                tmClientes.setValueAt(clientes.get(i).getNome(), i, 0);
                tmClientes.setValueAt(clientes.get(i).getSobrenome(), i, 1);
                tmClientes.setValueAt(clientes.get(i).getCpf(), i, 2);
                tmClientes.setValueAt(clientes.get(i).getCelular(), i, 3);
                tmClientes.setValueAt(clientes.get(i).getFixo(), i, 4);
            }
        }

    }

    //
    protected void excluirCliente() {
        if (tbCliente.getSelectedRow() != -1) {
            int res = JOptionPane.showConfirmDialog(this, "Deseja apagar este registro?", "ConfirmaÃ§Ã£o", JOptionPane.YES_NO_OPTION, 2);
            if (res == JOptionPane.YES_OPTION) {
                ControleCliente pc = new ControleCliente();
                pc.excluirClientes(clientes.get(tbCliente.getSelectedRow()).getId());
                JOptionPane.showMessageDialog(this, "Registro apagado com sucesso", "Registro", 0);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nenhum Registro Selecionado na Tabela", "Erro", 0);
        }
    }
    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        novoCliente();
        tipoCadastro = "novo";
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        tipoCadastro = "alteracao";
        alteraCliente();
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        switch (tipoCadastro) {
            case "novo":
                cadastraCliente();
                break;
            case "alteracao":
                alterarCliente();
                break;
        }
        atualizarCliente();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpaCampos();
        desabilitarCampos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        listarCliente();
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
        excluirCliente();
        atualizarCliente();

    }//GEN-LAST:event_btnApagarActionPerformed

    private void jcGrupoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcGrupoMouseClicked
        int c = jcGrupo.getItemCount();
        if (c == 0) {
            TelaGrupoCliente grupo = new TelaGrupoCliente();
            grupo.setVisible(true);
            grupo.setState(JFrame.NORMAL);
        }
    }//GEN-LAST:event_jcGrupoMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        mapaCliente();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TelaCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcCidade;
    private javax.swing.JComboBox jcGrupo;
    private javax.swing.JTable tbCliente;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtCep;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JTextField txtRua;
    private javax.swing.JTextField txtSobrenome;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
